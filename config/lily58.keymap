/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td_brackets: td_brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "[]";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        td_prnts: td_prnts {
            compatible = "zmk,behavior-tap-dance";
            label = "()";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        td_cbrces: td_cbrces {
            compatible = "zmk,behavior-tap-dance";
            label = "{}";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    macros {
        scrshot: scrnsht {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp LSHIFT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;

            label = "SCRNSHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <45 32>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_mac_layer {
            bindings = <
&none       &none        &none                &none         &none                &none                                    &none        &none                 &none          &none                 &none                &none
&kp TAB     &kp Q        &kp W                &kp E         &kp R                &kp T                                    &kp Y        &kp U                 &kp I          &kp O                 &kp P                &kp LEFT_BRACKET
&kp ESCAPE  &hrm LALT A  &hrm LEFT_CONTROL S  &hrm LSHFT D  &hrm LEFT_COMMAND F  &kp G                                    &kp H        &hrm RIGHT_COMMAND J  &hrm RSHIFT K  &hrm RIGHT_CONTROL L  &hrm RALT SEMICOLON  &kp SQT
&scrshot    &kp Z        &kp X                &kp C         &kp V                &kp B        &tog_off 1       &tog_on 1  &kp N        &kp M                 &kp COMMA      &kp DOT               &kp FSLH             &caps_word
                                              &none         &mo 4                &lt 3 SPACE  &kp BACKSPACE    &kp RET    &lt 2 SPACE  &kp CAPSLOCK          &none
            >;
        };

        override_win_layer {
            bindings = <
&trans  &trans           &trans       &trans        &trans        &trans                    &trans  &trans        &trans         &trans       &trans               &trans
&trans  &trans           &trans       &trans        &trans        &trans                    &trans  &trans        &trans         &trans       &trans               &trans
&trans  &hrm LEFT_GUI A  &hrm LALT S  &hrm LSHFT D  &hrm LCTRL F  &trans                    &trans  &hrm RCTRL J  &hrm RSHIFT K  &hrm RALT L  &hrm RGUI SEMICOLON  &trans
&trans  &trans           &trans       &trans        &trans        &trans  &trans    &trans  &trans  &trans        &trans         &trans       &trans               &trans
                                      &trans        &trans        &trans  &trans    &trans  &trans  &trans        &trans
            >;
        };

        right_half_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                           &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10                          &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11                          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12        &trans    &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans  &trans
                        &trans  &trans  &kp BACKSPACE  &trans    &trans  &trans          &trans          &trans
            >;
        };

        left_half_layer {
            bindings = <
&trans         &trans         &trans            &trans          &trans      &trans                               &trans                &trans                 &trans          &trans     &trans            &trans
&kp GRAVE      &kp TILDE      &kp HASH          &kp EXCL        &kp EQUAL   &kp DOT                              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RBRC   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LESS_THAN  &kp MINUS      &kp GREATER_THAN  &kp UNDERSCORE  &kp DOLLAR  &kp AMPERSAND                        &kp COMMA             &kp SEMI               &kp COLON       &kp PLUS   &kp SLASH         &trans
&trans         &kp BACKSLASH  &kp AT_SIGN       &kp PERCENT     &kp CARET   &kp PIPE       &trans    &trans      &trans                &trans                 &trans          &kp ASTRK  &trans            &trans
                                                &trans          &trans      &trans         &trans    &kp LSHIFT  &trans                &trans                 &trans
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans        &trans  &trans      &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp ASTERISK  &kp N7  &kp N8      &kp N9  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp SLASH     &kp N4  &kp N5      &kp N6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp EQUAL     &kp N1  &kp N2      &kp N3  &kp ENTER  &trans
                        &trans  &trans  &trans  &trans    &trans  &kp N0        &trans  &kp PERIOD
            >;
        };
    };
};
